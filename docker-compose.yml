version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: munirdls
      TZ: America/Argentina/Buenos_Aires
    ports:
      - "5432:5432"
    volumes:
      - ./dbdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d munirdls"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    profiles: ["dev", "prod"]

  mosquitto:
    image: eclipse-mosquitto:2
    restart: unless-stopped
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - ./mosq-data:/mosquitto/data
      - ./mosq-log:/mosquitto/log

  # -------- API DEV --------
  api:
    build: .
    container_name: bdd-api
    working_dir: /code
    env_file:
      - ./.env
    environment:
      TZ: America/Argentina/Buenos_Aires
      RUN_ENV: docker

      # DSN: definir AMBAS para que el listener encuentre DATABASE_URL
      DB_URL: postgresql://postgres:postgres@db:5432/munirdls
      DATABASE_URL: postgresql://postgres:postgres@db:5432/munirdls

      # CORS
      CORS_ALLOW_ORIGINS: http://localhost:5173,http://127.0.0.1:5173

      # MQTT
      MQTT_HOST: mosquitto
      MQTT_PORT: 1883

      # WebSocket
      WS_ALLOWED_ORIGINS: "*"

      # Telegram / Listener
      TELEGRAM_ENABLED: "true"
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:?set_in_.env}
      TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID:?set_in_.env}
      ALARM_NOTIFY_CHANNEL: alarm_events
    command: >
      bash -lc "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./app:/code/app
      - ./web:/code/web
      - ./requirements.txt:/code/requirements.txt:ro
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      mosquitto:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    profiles: ["dev"]

  # -------- API PROD --------
  api_prod:
    build: .
    working_dir: /code
    env_file:
      - ./.env
    environment:
      TZ: America/Argentina/Buenos_Aires
      RUN_ENV: docker

      # DSN (mismo comentario que arriba)
      DB_URL: postgresql://postgres:postgres@db:5432/munirdls
      DATABASE_URL: postgresql://postgres:postgres@db:5432/munirdls

      # CORS
      CORS_ALLOW_ORIGINS: http://localhost:5173,*

      # MQTT
      MQTT_HOST: mosquitto
      MQTT_PORT: 1883

      # WebSocket
      WS_ALLOWED_ORIGINS: "*"

      # Telegram / Listener
      TELEGRAM_ENABLED: "true"
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:?set_in_.env}
      TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID:?set_in_.env}
      ALARM_NOTIFY_CHANNEL: alarm_events
    # ⚠️ 1 worker para evitar mensajes duplicados del listener
    command: >
      bash -lc "uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 1"
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      mosquitto:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    profiles: ["prod"]
